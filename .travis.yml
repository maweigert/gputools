
# Don't use language: python; this gives us an unnecessary virtualenv
language: generic

env:
  # Build and test package on all supported python version
  - BUILD_TARGET=3.6
  - BUILD_TARGET=3.5
  - BUILD_TARGET=2.7

os:
  - osx
#  - linux


branches:
  only:
  - master
  - develop

# addons:
#   apt:
#     packages:
#       # On Linux we need OpenBLAS, on OSX Apple Accelerate is present by default
#       - libopenblas-dev
#       - liblapack-dev

before_install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew upgrade python; fi
    - python --version

install:
  - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
  - if [[ "$BRANCH" == "master" ]]; then
      export LABEL="main";
    else
      export LABEL="dev";
    fi

#  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  # - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
  #     wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh;
  #   else
  #     wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
  #   fi

  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then MINICONDA_OS=Linux; else MINICONDA_OS=MacOSX; fi
  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME"/miniconda/etc/profile.d/conda.sh
  - conda config --set always_yes yes --set changeps1 no --set auto_update_conda false
  - hash -r
  
  - export PATH="$HOME/miniconda/bin:$PATH"
  - export USER=talley
  - export CONDA_BLD_PATH=~/conda-bld

  - conda install conda-build anaconda-client
#  - conda update -q conda
  - conda config --add channels conda-forge
  - conda config --set show_channel_urls true
  # Useful for debugging any issues with conda
  - conda info -a

script:
  - conda build --python=$BUILD_TARGET .
  - OUTPUT=$(conda build --python=$BUILD_TARGET --output .)
  - echo $OUTPUT

after_success:
  - echo $TRAVIS_TEST_RESULT
  - conda convert -p linux-64 -p win-64 -p osx-64 -o $CONDA_BLD_PATH $OUTPUT
  - ls $CONDA_BLD_PATH/*
  - anaconda -v -t $CONDA_UPLOAD_TOKEN upload $CONDA_BLD_PATH/osx-64/*.tar.bz2 --user $USER --force --label $LABEL 
  - anaconda -v -t $CONDA_UPLOAD_TOKEN upload $CONDA_BLD_PATH/linux-64/*.tar.bz2 --user $USER --force --label $LABEL 
  - anaconda -v -t $CONDA_UPLOAD_TOKEN upload $CONDA_BLD_PATH/win-64/*.tar.bz2 --user $USER --force --label $LABEL 
#  - test $TRAVIS_BRANCH = "master" && bash conda.recipe/conda_upload.sh
